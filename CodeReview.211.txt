BitStringInterface contains methods that must be implemented in BitString. BitString is used to store, convert, and access relevant information on bits represented as an array of booleans. This class provides a way to store and access bits in Huffman.java. Huffman.java includes the implementation of a Huffman tree and allows encoding and decoding using the tree. The tree is the key to encoding and decoding as it?s structured so that fewer bits are required to represent high frequency characters. After using the tree to obtain codes for each character and storing it in an array, the array can be passed to addBits, a method that stores the array data in another array called bitString. The bitstring is converted to the desired format using toBytes. This bitstring is then returned as the encoded version of the text. I learned that ? is the conditional operator and that assert statements can be used outside of JUnit tests.
